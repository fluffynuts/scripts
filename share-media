#!/bin/sh
PIDFILE="/tmp/share-media.pid"
if test -e "$PIDFILE"; then
  if test -e "/proc/$(cat $PIDFILE)"; then
    echo "$(basename $0) already running..."
    exit 1
  fi
fi
echo $$ > $PIDFILE
TARGET="$1"
if test -z "$TARGET"; then
  echo "Please specify the target to share to"
  echo "eg: $0 /run/media/daf/Target"
  exit 1
fi
BITSPLAT=$(which bitsplat)
if test -z "$BITSPLAT"; then
  echo "Unable to find bitsplat in the path";
  return 2;
fi
if test ! -z "$QUIET"; then
  QUIET="-q"
fi
CMD="$BITSPLAT --mode opt-in --keep-stale $QUIET"

if test ! -d "$TARGET/series"; then
  mkdir "$TARGET/series"
fi
if test ! -d "$TARGET/movies"; then
  mkdir "$TARGET/movies"
fi

BACKUP_BASE="/mnt/dump/sync-db-backup/$(basename $TARGET)"
if test ! -e "$BACKUP_BASE"; then
  mkdir -p "$BACKUP_BASE"
fi

function restore_db_if_missing()
{
  TARGET_DIR="$1"
  TARGET_DB="$TARGET/$TARGET_DIR/.bitsplat.db"
  BACKUP_DIR="$BACKUP_BASE/$TARGET_DIR"
  BACKUP_DB="$BACKUP_DIR/.bitsplat.db"

  if ! test -e "$BACKUP_DIR"; then
    mkdir -p "$BACKUP_DIR"
  fi

  if test ! -e "$TARGET_DB"; then
    if test -e "$BACKUP_DB"; then
      echo "Restoring database $TARGET_DB from $BACKUP_DB"
      cp "$BACKUP_DB" "$TARGET_DB"
    fi
  fi
}

function backup_db()
{
  TARGET_DIR="$1"
  TARGET_DB="$TARGET/$TARGET_DIR/.bitsplat.db"
  BACKUP_DIR="$BACKUP_BASE/$TARGET_DIR"
  BACKUP_DB="$BACKUP_DIR/.bitsplat.db"

  if test -e "$TARGET_DB"; then
    if ! test -e "$BACKUP_DIR"; then
      mkdir -p "$BACKUP_DIR"
    fi
    echo "Backing up database $TARGET_DB to $BACKUP_DB"
    cp "$TARGET_DB" "$BACKUP_DB"
  fi
}

restore_db_if_missing series
for src in /mnt/monolith/series /mnt/piggy/series/watched /mnt/piglet/series /mnt/movies/series; do
  echo "=== share series from $(basename $(dirname $src)) ==="
  $CMD -s "$src" -t "$TARGET/series"
done
backup_db series

echo "=== share new movies ==="
restore_db_if_missing movies
$BITSPLAT $QUIET --keep-stale -s "/mnt/monolith/movies" -t "$TARGET/movies"
backup_db movies
