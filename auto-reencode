#!/bin/zsh
if test -z "$PROFILE"; then
  PROFILE="Vimeo YouTube 720p30"
fi

if test -z "$HANDBRAKE"; then
  HANDBRAKE=$(which HandBrakeCLI)
fi

function clear_line()
{
    echo -n "\r                                                                                                          \r"
}

function process_one()
{
  filepath="$1"
  CODEC=$(mediainfo "$filepath" | grep -A5 Video | grep Format | grep -v Info | grep -v profile | awk '{print $3}' | tr '[:upper:]' '[:lower:]')
  SHORT=$(echo $filepath | cut -d'/' -f5-)
  if test -z "$SHORT"; then
    SHORT="$filepath"
  fi
  if test -z "$QUIET"; then
    clear_line
    echo -en "inspect: $SHORT"
  fi
  if test "$CODEC" = "hevc" || test ! -z "$FORCE"; then
    clear_line
    if test -z "$FORCE"; then
      echo "Re-encode: \"$SHORT\""
    else
      echo "Re-encode (forced): \"$SHORT\""
    fi
    TMPFILE="/tmp/$(basename $filepath | sed -e 's/mkv$/mp4/')"
    TARGET="$(dirname $filepath)/$(basename $TMPFILE)"
    if test -f "$TARGET"; then
      echo "$TARGET already exists... skipping"
      return 0
    fi
    if nice -n 19 $HANDBRAKE -Z "$PROFILE" -i "$filepath" -o "$TMPFILE" &> "$TMPFILE.log"; then
      if mv "$TMPFILE" "$(dirname $filepath)"; then
        if rm $filepath; then
          return 0
        fi
        RET=$?
        echo "Cannot remove $filepath"
        return $RET
      else
        RET=$?
        echo "Cannot move $TMPFILE to $(dirname $filepath)"
        return $RET
      fi
    else
      RET=$?
      echo "Re-encode for $filepath fails!"
      return $RET
    fi
  fi
}

DID_SOMETHING=0
while test $# -gt 0; do
  DID_SOMETHING=1
  if test -f "$1"; then
    echo "process one: $1"
    if process_one "$1"; then
      exit 0
    else
      exit 1
    fi
  elif test -d "$1"; then
    for f in $1/**/*.mkv; do
      process_one $f
    done
  else
    echo "Error: please supply a dir or file to work with (not $1)"
    exit 1
  fi
  shift
done

if test $DID_SOMETHING = "0"; then
  echo "Please invoke with a dir or file to work with"
fi
